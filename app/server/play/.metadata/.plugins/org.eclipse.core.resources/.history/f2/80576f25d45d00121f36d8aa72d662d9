package controllers;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import org.codehaus.jackson.node.ArrayNode;
import org.codehaus.jackson.node.JsonNodeFactory;
import org.codehaus.jackson.node.ObjectNode;

import play.db.DB;
import play.mvc.Controller;
import play.mvc.Result;

public class RoutePoints extends Controller {

	private static Result getRoutePoints(String logbookId) {
		ArrayNode tJsonResult = JsonNodeFactory.instance.arrayNode();
		
		String Query = "SELECT * FROM `seapal`.`trip` WHERE logbookID=" + logbookId;
		
		try {
			Connection connection = DB.getConnection();
			Statement select = connection.createStatement();
			ResultSet result = select.executeQuery(Query);

			while (result.next()) {
				ObjectNode tJsonLogBook = play.libs.Json.newObject();
				tJsonLogBook.put("triptitle", result.getString("triptitle"));
				tJsonLogBook.put("startpoint", result.getString("startpoint"));
				tJsonLogBook.put("destination", result.getString("destination"));
				tJsonLogBook.put("skipper", result.getString("skipper"));
				tJsonLogBook.put("starttime", result.getString("start"));
				tJsonLogBook.put("endtime", result.getString("end"));
				tJsonLogBook.put("duration", "12");
				tJsonLogBook.put("motorminutes", result.getString("motor"));
				tJsonLogBook.put("fueltankfilled", result.getString("tank_filled"));
				tJsonLogBook.put("crew", result.getString("crew"));
				tJsonLogBook.put("notes", result.getString("notes"));
				tJsonLogBook.put("logbookId", result.getString("logbookID"));
				tJsonLogBook.put("dataId", result.getString("tripID"));
				
				tJsonResult.add(tJsonLogBook);
			}
			connection.close();
			return ok(tJsonResult);
		} catch (SQLException e) {
			e.printStackTrace();
			return badRequest(e.getMessage());
		}
	}
}
